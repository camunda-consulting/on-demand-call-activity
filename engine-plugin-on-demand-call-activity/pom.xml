<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.camunda.bpm.extension.bpmn.callactivity.ondemand</groupId>
  <artifactId>engine-plugin-on-demand-call-activity</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <packaging>jar</packaging>

  <name>On-demand Call Activity Plugin</name>
  <description>A plugin for [Camunda BPM](http://docs.camunda.org) that allows to skip the invocation of a sub-process. [The project has been generated by the Maven archetype 'camunda-archetype-engine-plugin-7.11.1']</description>

  <!-- Camunda-maintained build settings, plugin versions and release profiles -->
  <parent>
    <groupId>org.camunda</groupId>
    <artifactId>camunda-release-parent</artifactId>
    <version>3.8.1</version>
    <relativePath />
  </parent>

  <properties>
    <version.java>1.8</version.java>
    <camunda.version>7.15.0</camunda.version>
    <!--
    Adjust if you want to use Camunda Enterprise Edition (EE):
    <camunda.version>7.11.0-ee</camunda.version>
    Make sure you also switch to EE repository below
    -->
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.camunda.bpm</groupId>
        <artifactId>camunda-bom</artifactId>
        <version>${camunda.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <!-- process engine, needs to be provided -->
      <groupId>org.camunda.bpm</groupId>
      <artifactId>camunda-engine</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
		  <groupId>org.camunda.bpm.extension.bpmn.callactivity.ondemand</groupId>
		  <artifactId>asynchronous-service-task</artifactId>
      <version>0.0.1-SNAPSHOT</version>
      <type>jar</type>
    </dependency>

    <!-- Camunda Assertions for unit testing -->
    <dependency>
      <groupId>org.camunda.bpm.assert</groupId>
      <artifactId>camunda-bpm-assert</artifactId>
      <version>10.0.0</version>
      <scope>test</scope>
    </dependency>
    <!-- AssertJ Testing Library -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.19.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Needed for InMemoryH2Test -->
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.200</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Used to generate test coverage reports, see https://github.com/camunda/camunda-consulting/tree/master/snippets/camunda-bpm-process-test-coverage -->
      <groupId>org.camunda.bpm.extension</groupId>
      <artifactId>camunda-bpm-process-test-coverage</artifactId>
      <version>0.4.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- use logback as logger -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <!-- apache commons logging => slf4j -->
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.32</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!--  java util logging => slf4j -->
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>1.7.32</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.3.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>camunda-bpm-nexus</id>
      <name>Camunda Maven Repository</name>
      <url>https://app.camunda.com/nexus/content/groups/public</url>
    </repository>
    <!-- enable this for EE dependencies (requires credentials in ~/.m2/settings.xml)
    <repository>
      <id>camunda-bpm-nexus-ee</id>
      <name>Camunda Enterprise Maven Repository</name>
      <url>https://app.camunda.com/nexus/content/repositories/camunda-bpm-ee</url>
    </repository>
    -->
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/camunda-consulting/on-demand-call-activity</url>
    </snapshotRepository>
    <repository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/camunda-consulting/on-demand-call-activity</url>
    </repository>
  </distributionManagement>
  
</project>
